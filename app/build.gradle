import groovy.json.JsonSlurper

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.frogermcs.androiddevmetrics'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

android {
    compileSdkVersion rootProject.compileSdkV
    buildToolsVersion rootProject.buildToolsV

    defaultConfig {
        versionCode 1
        versionName "1.0"
        applicationId "suhockii.rxmusic"
        vectorDrawables.useSupportLibrary true
        minSdkVersion rootProject.minSdkV
        targetSdkVersion rootProject.targetSdkV
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError true
        ignore 'UnusedResources'
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    productFlavors {
        dev {
            def filePath = 'app-credentials.json'
            def agent = (new JsonSlurper().parseText(file(filePath).text)).user_agent
            def secret = (new JsonSlurper().parseText(file(filePath).text)).client_secret
            def id = (new JsonSlurper().parseText(file(filePath).text)).client_id
            buildConfigField('String', 'USER_AGENT', "\"" + agent + "\"")
            buildConfigField('String', 'CLIENT_SECRET', "\"" + secret + "\"")
            buildConfigField('String', 'CLIENT_ID', "\"" + id + "\"")
        }
    }
    dexOptions {
        javaMaxHeapSize "8g"
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile(
            rootProject.kotlin,
            rootProject.rxJava,
            rootProject.rxAndroid,
            rootProject.rxPermissions,
            rootProject.rxJavaAdapter,
            rootProject.retrofit,
            rootProject.gsonConverter,
            rootProject.dagger,
            rootProject.moxy,
            rootProject.moxyAndroid,
            rootProject.moxyCompiler,
            rootProject.moxyAppcompat,
            rootProject.conductor,
            rootProject.conductorSupport,
            rootProject.conductorRxLifecycle,
            rootProject.glide,
            rootProject.design,
            rootProject.support,
            rootProject.appcompat,
            rootProject.constraint,
            rootProject.recyclerview
    )
    debugCompile(
            rootProject.stetho,
            rootProject.stethoOkhttp,
            rootProject.leakcanary
    )
    kapt(
            rootProject.moxyCompiler,
            rootProject.daggerCompiler
    )
}
